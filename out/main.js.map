{"version":3,"sources":["webpack:///webpack/bootstrap 3525e748daf266b717b4","webpack:///external \"babel-polyfill\"","webpack:///./src/main.ts","webpack:///external \"colors\"","webpack:///external \"path\"","webpack:///external \"mkdirp\"","webpack:///external \"klaw-sync\"","webpack:///./src/Model.ts","webpack:///external \"fs\"","webpack:///external \"js-yaml\"","webpack:///./src/Template.ts","webpack:///external \"handlebars\"","webpack:///./src/TemplateStateMachine.ts"],"names":[],"mappings":"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","file":"out/main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3525e748daf266b717b4","module.exports = require(\"babel-polyfill\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-polyfill\"\n// module id = 1\n// module chunks = 0","import { red, yellow } from 'colors'\nimport * as path from 'path'\nimport * as fs from 'fs'\nimport * as mkdirp from 'mkdirp'\nimport klawSync = require('klaw-sync')\n\nimport { StateModel, readStateModel } from './Model'\nimport { isSimpleTemplate, applyTemplate, createPackageFolder } from './Template'\n\nconst templateName = process.argv[2]\nconst fileName = process.argv[3]\n\nif (!fileName || !templateName) {\n    console.error(red('You need to pass in a template and a model to process. (yml file)'))\n    console.error(yellow('state-machine-generator TEMPLATE_NAME YML_FILE'))\n    process.exit(1)\n}\n\nconst model = readStateModel(fileName)\n\nlet templateFolder\n\nif (isSimpleTemplate(templateName)) {\n    console.log(`__dirname is ${__dirname}`)\n    templateFolder = path.resolve(path.join(\n        __dirname, '../src/templates/', templateName,'/'))\n} else {\n    templateFolder = path.resolve(templateName)\n}\n\nconst targetFolder = path.join('.', createPackageFolder(model.package))\n\nklawSync(templateFolder, { nofile: true })\n    .map(file => file.path.substring(templateFolder.length + 1))\n    .forEach(folderPath => {\n        folderPath = folderPath.replace(/Xyz/g, model.name)\n        mkdirp.sync(path.join(targetFolder, folderPath))\n    })\n\n\nklawSync(templateFolder, { nodir: true })\n    .map(file => file.path.substring(templateFolder.length + 1))\n    .forEach(filePath => {\n        applyTemplate(\n            path.join(templateFolder, filePath),\n            targetFolder,\n            filePath,\n            model\n        );\n    })\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","module.exports = require(\"colors\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"colors\"\n// module id = 3\n// module chunks = 0","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 4\n// module chunks = 0","module.exports = require(\"mkdirp\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mkdirp\"\n// module id = 5\n// module chunks = 0","module.exports = require(\"klaw-sync\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"klaw-sync\"\n// module id = 6\n// module chunks = 0","import * as fs from 'fs'\nimport * as jsYaml from 'js-yaml'\n\ntype State = string;\n\nexport interface Transition {\n    name: string\n    startState: State\n    endState: State\n}\n\nexport interface StateModel {\n  name: string\n  package: string\n  states: Array<State>\n  transitions: Array<Transition>\n  transitionSet: Array<string>\n}\n\n/**\n * Read the state model from the yml file.\n * @param fileName the file to read\n */\nexport function readStateModel(fileName: string) : StateModel {\n  const result = {\n    name: 'Test',\n    package: 'com.ciplogic.test',\n    states: [],\n    transitions: [],\n    transitionSet: []\n  }\n\n  const content = fs.readFileSync(fileName, 'utf-8')\n  const fileItems = jsYaml.load(content)\n\n  if (!fileItems.name) {\n    throw new Error('`name` property was not specified in the yml file.');\n  }\n  result.name = fileItems.name;\n\n  if (!fileItems.package) {\n    throw new Error('`package` property was not specified in the yml file.');\n  }\n  result.package = fileItems.package;\n\n  if (!fileItems.states) {\n    throw new Error('`states` property was not specified in the yml file.');\n  }\n  result.states = fileItems.states;\n\n  console.log(`file transitions ${JSON.stringify(fileItems.transitions)}`);\n\n  function addTransition(startStateName, transitionName) {\n    const startState = result.states[ result.states.indexOf(startStateName) ]\n    const endStateName = fileItems.transitions[startStateName][transitionName];\n    const endState = result.states[ result.states.indexOf(endStateName) ];\n\n    console.log(`${startStateName} -> ${endStateName} (${transitionName})`);\n\n    const transition : Transition = {\n      name: transitionName,      \n      startState,\n      endState,\n    }\n\n    result.transitions.push(transition)\n  }\n\n  if (!fileItems.transitions) {\n    throw new Error('`transitions` property was not specified in the yml file.');\n  }\n\n  Object.keys(fileItems.transitions).forEach((startStateName) => {\n    Object.keys(fileItems.transitions[startStateName]).forEach((transitionName) => {\n      if (result.transitionSet.indexOf(transitionName) < 0) {\n        result.transitionSet.push(transitionName)\n      }\n      addTransition(startStateName, transitionName);\n    })\n  })\n\n  const finalResult : StateModel = {\n    ...fileItems,\n    ...result\n  }\n\n  console.log(`Item: ${JSON.stringify(finalResult)}`)\n\n  return finalResult\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Model.ts","module.exports = require(\"fs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fs\"\n// module id = 8\n// module chunks = 0","module.exports = require(\"js-yaml\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"js-yaml\"\n// module id = 9\n// module chunks = 0","import * as mkdirp from 'mkdirp'\nimport * as path from 'path'\nimport * as fs from 'fs'\nimport * as handlebars from 'handlebars'\n\nimport { TemplateState, TemplateStateMachine } from './TemplateStateMachine'\n\nimport { StateModel } from './Model'\n\nconst TRANSITIONS_RE = /^\\s*\\/\\/ BEGIN_TRANSITIONS:\\s*(.*)\\s*$/m\nconst TRANSITIONS_END_RE = /^\\s*\\/\\/ END_TRANSITIONS\\s*$/m\n\nconst TRANSITION_SET_RE = /^\\s*\\/\\/ BEGIN_TRANSITION_SET:\\s*(.*)\\s*$/m\nconst TRANSITION_SET_END_RE = /^\\s*\\/\\/ END_TRANSITION_SET\\s*$/m\n\nconst STATES_RE = /^\\s*\\/\\/ BEGIN_STATES:\\s*(.*)\\s*$/m\nconst STATES_END_RE = /^\\s*\\/\\/ END_STATES\\s*$/m\n\nconst HANDLEBARS_RE =  /^\\s*\\/\\/\\s*BEGIN_HANDLEBARS\\s*$/m\nconst HANDLEBARS_CONTENT = /^\\s*\\/\\/(.*)$/m\nconst HANDLEBARS_END_RE = /^\\s*\\/\\/\\s*END_HANDLEBARS\\s*$/m\n\nconst HANDLEBARS_SHARP_RE =  /^\\s*#\\s*BEGIN_HANDLEBARS\\s*$/m\nconst HANDLEBARS_SHARP_CONTENT = /^\\s*#(.*)$/m\nconst HANDLEBARS_SHARP_END_RE = /^\\s*#\\s*END_HANDLEBARS\\s*$/m\n\nhandlebars.registerHelper('capitalize', (s: string) => {\n    if (!s) {\n        return s\n    }\n\n    return s.substr(0, 1).toUpperCase() + s.substr(1)\n})\n\n/**\n * \n * @param packageName The folder sub structure to create.\n */\nexport function createPackageFolder(packageName: string) : string {\n    console.log(`package: ${packageName}`)\n    const folder = packageName.replace(/\\./g, '/')\n    mkdirp.sync(folder)\n\n    return folder\n}\n\nconst BUNDLED_TEMPLATES = {\n    java: true,\n    ts: true,\n    dot: true,\n    asciidoctor: true,\n    python: true,\n}\n\nexport function isSimpleTemplate(name: string): boolean {\n    return name in BUNDLED_TEMPLATES\n}\n\nfunction replacePackageAndName(line: string, model: StateModel) : string {\n    line = line.replace(/Xyz/g, model.name)\n    line = line.replace(/com\\.ciplogic\\.statemachine/g, model.package)\n\n    return line\n}\n\n/**\n * Write the template file.\n * @param templateFilePath The source template.\n * @param targetFilePath The target file to write.\n * @param filePath Internal path inside the template folder.\n * @param model\n */\nexport function applyTemplate(templateFilePath: string, \n                              targetFolder: string,\n                              filePath: string, \n                              model: StateModel) {\n    filePath = filePath.replace(/Xyz/g, model.name)    \n    const targetFilePath = path.join(targetFolder, filePath);\n    const readStateMachine = new TemplateStateMachine()\n\n    readStateMachine.onData(TemplateState.NORMAL_TEXT, (line) => {\n        const transitionMatch = TRANSITIONS_RE.exec(line)\n        if (transitionMatch) {\n            const pattern = transitionMatch[1]\n            readStateMachine.changeState(TemplateState.TRANSITIONS, pattern)\n\n            return\n        }\n\n        const transitionSetMatch = TRANSITION_SET_RE.exec(line)\n        if (transitionSetMatch) {\n            const pattern = transitionSetMatch[1]\n            readStateMachine.changeState(TemplateState.TRANSITION_SET, pattern)\n\n            return\n        }\n\n        const statesMatch = STATES_RE.exec(line)\n        if (statesMatch) {\n            const pattern = statesMatch[1]\n            readStateMachine.changeState(TemplateState.STATES, pattern)\n\n            return\n        }\n\n        if (HANDLEBARS_RE.test(line)) {\n            return TemplateState.HANDLEBARS\n        }\n\n        if (HANDLEBARS_SHARP_RE.test(line)) {\n            return TemplateState.HANDLEBARS_SHARP\n        }\n\n        resultContent.push(replacePackageAndName(line, model))\n    })\n\n    readStateMachine.onData(TemplateState.HANDLEBARS, (line) => {\n        if (HANDLEBARS_END_RE.test(line)) {\n            return TemplateState.NORMAL_TEXT\n        }\n\n        const handlebarsContentMatcher = HANDLEBARS_CONTENT.exec(line)\n\n        if (!handlebarsContentMatcher) {\n            console.log('Ignored non commented HBS line: ', line)\n            return\n        }\n\n        resultContent.push(replacePackageAndName(handlebarsContentMatcher[1], model))\n    })\n\n    readStateMachine.onData(TemplateState.HANDLEBARS_SHARP, (line) => {\n        if (HANDLEBARS_SHARP_END_RE.test(line)) {\n            return TemplateState.NORMAL_TEXT\n        }\n\n        const handlebarsContentMatcher = HANDLEBARS_SHARP_CONTENT.exec(line)\n\n        if (!handlebarsContentMatcher) {\n            console.log('Ignored non commented HBS line: ', line)\n            return\n        }\n\n        resultContent.push(replacePackageAndName(handlebarsContentMatcher[1], model))\n    })\n\n    readStateMachine.onData(TemplateState.STATES, (line) => {\n        if (STATES_END_RE.test(line)) {\n            return TemplateState.NORMAL_TEXT\n        }\n    })\n\n    readStateMachine.onData(TemplateState.TRANSITIONS, (line) => {\n        if (TRANSITIONS_END_RE.test(line)) {\n            return TemplateState.NORMAL_TEXT\n        }\n    })\n\n    readStateMachine.onData(TemplateState.TRANSITION_SET, (line) => {\n        if (TRANSITION_SET_END_RE.test(line)) {\n            return TemplateState.NORMAL_TEXT\n        }\n    })\n\n    readStateMachine.afterEnter(TemplateState.TRANSITIONS, (ev) => {\n        model.transitions.forEach(transition => {\n            const pattern : string = ev.data\n            const transitionString = pattern\n                .replace(/TRANSITION_NAME/g, transition.name)\n                .replace(/FROM_STATE/g, transition.startState)\n                .replace(/TO_STATE/g, transition.endState)\n            \n            resultContent.push(replacePackageAndName(transitionString, model))\n        })\n    })\n\n    readStateMachine.afterEnter(TemplateState.TRANSITION_SET, (ev) => {\n        const pattern: string = ev.data\n        model.transitionSet.forEach(transitionName => {\n            const transitionString = pattern\n                .replace(/TRANSITION_NAME/g, transitionName)\n            \n            resultContent.push(replacePackageAndName(transitionString, model))\n        })\n    })\n\n    readStateMachine.afterEnter(TemplateState.STATES, (ev) => {\n        model.states.forEach(state => {\n            const pattern: string = ev.data\n            const stateString = pattern.replace('STATE_NAME', state)\n            \n            resultContent.push(replacePackageAndName(stateString, model))\n        })\n    })\n\n    let resultContent = []\n    const content = fs.readFileSync(templateFilePath, 'utf-8')\n                      .split(/\\r?\\n/g)\n    content.forEach(data => readStateMachine.sendData(data))\n\n    const finalTemplate = resultContent.join('\\n')\n    const contentFn = handlebars.compile(finalTemplate, {\n        preventIndent: true\n    })\n\n    const renderedContent = contentFn(model)\n    fs.writeFileSync(targetFilePath, renderedContent, {encoding: 'utf-8'})\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Template.ts","module.exports = require(\"handlebars\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"handlebars\"\n// module id = 11\n// module chunks = 0","export enum TemplateState {\nNORMAL_TEXT,\nTRANSITIONS,\nTRANSITION_SET,\nSTATES,\nHANDLEBARS,\nHANDLEBARS_SHARP,\n}\n\nexport class TemplateStateChangeEvent {\n    _cancelled: boolean\n\n    constructor(private _previousState: TemplateState,\n                private _targetState: TemplateState,\n                public data: any) {\n    }\n\n    get previousState() : TemplateState {\n        return this._previousState\n    }\n\n    get targetState() : TemplateState {\n        return this._targetState\n    }\n\n    cancel() {\n        this._cancelled = true\n    }\n}\n\nexport type TransitionCallback = (event: TemplateStateChangeEvent) => any;\nexport type DataCallback = ((data: any) => TemplateState) | ((data: any) => void)\n\nexport interface CallbackRegistration {\n    detach() : void\n}\n\nexport class TemplateStateError extends Error {\n}\n\nconst transitionSet : { [transitionId: number]: boolean } = {}\nconst linkMap : { \n    [fromStateId: number] : { \n        [transitionName: string] : number \n    } \n} = {}\n\nregisterTransition(\"startTransitions\", TemplateState.NORMAL_TEXT, TemplateState.TRANSITIONS);\nregisterTransition(\"startTransitionSet\", TemplateState.NORMAL_TEXT, TemplateState.TRANSITION_SET);\nregisterTransition(\"startStates\", TemplateState.NORMAL_TEXT, TemplateState.STATES);\nregisterTransition(\"startHandlebars\", TemplateState.NORMAL_TEXT, TemplateState.HANDLEBARS);\nregisterTransition(\"startHandlebarsSharp\", TemplateState.NORMAL_TEXT, TemplateState.HANDLEBARS_SHARP);\nregisterTransition(\"normalText\", TemplateState.TRANSITIONS, TemplateState.NORMAL_TEXT);\nregisterTransition(\"normalText\", TemplateState.TRANSITION_SET, TemplateState.NORMAL_TEXT);\nregisterTransition(\"normalText\", TemplateState.STATES, TemplateState.NORMAL_TEXT);\nregisterTransition(\"normalText\", TemplateState.HANDLEBARS, TemplateState.NORMAL_TEXT);\nregisterTransition(\"normalText\", TemplateState.HANDLEBARS_SHARP, TemplateState.NORMAL_TEXT);\n\nexport class TemplateStateMachine {\n\n    private currentState: TemplateState = null\n    private initialState: TemplateState\n\n    private currentChangeStateEvent: TemplateStateChangeEvent\n\n    private transitionListeners: { [stateId: number] : EventListener<TransitionCallback> }  = {}\n    private dataListeners: { [stateId: number] : EventListener<DataCallback> } = {}\n\n    constructor(initialState? : TemplateState) {\n        this.initialState = initialState || 0\n\nthis.transitionListeners[TemplateState.NORMAL_TEXT] = new EventListener<TransitionCallback>()\nthis.transitionListeners[TemplateState.TRANSITIONS] = new EventListener<TransitionCallback>()\nthis.transitionListeners[TemplateState.TRANSITION_SET] = new EventListener<TransitionCallback>()\nthis.transitionListeners[TemplateState.STATES] = new EventListener<TransitionCallback>()\nthis.transitionListeners[TemplateState.HANDLEBARS] = new EventListener<TransitionCallback>()\nthis.transitionListeners[TemplateState.HANDLEBARS_SHARP] = new EventListener<TransitionCallback>()\nthis.dataListeners[TemplateState.NORMAL_TEXT] = new EventListener<DataCallback>()\nthis.dataListeners[TemplateState.TRANSITIONS] = new EventListener<DataCallback>()\nthis.dataListeners[TemplateState.TRANSITION_SET] = new EventListener<DataCallback>()\nthis.dataListeners[TemplateState.STATES] = new EventListener<DataCallback>()\nthis.dataListeners[TemplateState.HANDLEBARS] = new EventListener<DataCallback>()\nthis.dataListeners[TemplateState.HANDLEBARS_SHARP] = new EventListener<DataCallback>()\n    }\n\n    get state() { \n        this.ensureStateMachineInitialized()\n        return this.currentState\n    }\n\nstartTransitions(data?: any) : TemplateState { return this.transition(\"startTransitions\", data); }\nstartTransitionSet(data?: any) : TemplateState { return this.transition(\"startTransitionSet\", data); }\nstartStates(data?: any) : TemplateState { return this.transition(\"startStates\", data); }\nstartHandlebars(data?: any) : TemplateState { return this.transition(\"startHandlebars\", data); }\nstartHandlebarsSharp(data?: any) : TemplateState { return this.transition(\"startHandlebarsSharp\", data); }\nnormalText(data?: any) : TemplateState { return this.transition(\"normalText\", data); }\n\n    private ensureStateMachineInitialized() {\n        if (this.currentState == null) {\n            this.changeStateImpl(this.initialState, null);\n        }\n    }\n\n    changeState(targetState: TemplateState, data?: any) : TemplateState {\n        this.ensureStateMachineInitialized()\n        return this.changeStateImpl(targetState, data)\n    }\n\n    changeStateImpl(targetState: TemplateState, data?: any) : TemplateState {\n        if (typeof targetState == 'undefined') {\n            throw new Error('No target state specified. Can not change the state.')\n        }\n\n        const stateChangeEvent = new TemplateStateChangeEvent(this.currentState, targetState, data)\n\n        if (this.currentChangeStateEvent) {\n            throw new TemplateStateError(\n                        `The TemplateStateMachine is already in a changeState (${this.currentChangeStateEvent.previousState} -> ${this.currentChangeStateEvent.targetState}). ` +\n                        `Transitioning the state machine (${this.currentState} -> ${targetState}) in \\`before\\` events is not supported.`);\n        }\n\n        if (this.currentState != null && !transitionSet[this.currentState << 16 | targetState]) {\n            console.error(`No transition exists between ${this.currentState} -> ${targetState}.`);\n            return this.currentState;\n        }\n\n        this.currentChangeStateEvent = stateChangeEvent\n\n        if (stateChangeEvent.previousState != null) {\n            this.transitionListeners[stateChangeEvent.previousState].fire(EventType.BEFORE_LEAVE, stateChangeEvent)\n        }\n        this.transitionListeners[stateChangeEvent.targetState].fire(EventType.BEFORE_ENTER, stateChangeEvent)\n\n        if (stateChangeEvent._cancelled) {\n            return this.currentState\n        }\n\n        this.currentState = targetState\n        this.currentChangeStateEvent = null\n\n        if (stateChangeEvent.previousState != null) {\n            this.transitionListeners[stateChangeEvent.previousState].fire(EventType.AFTER_LEAVE, stateChangeEvent)\n        }\n        this.transitionListeners[stateChangeEvent.targetState].fire(EventType.AFTER_ENTER, stateChangeEvent)\n\n        return this.currentState\n    }\n\n    transition(linkName: string, data? : any) : TemplateState {\n        this.ensureStateMachineInitialized()\n\n        const sourceState = linkMap[this.currentState]\n\n        if (!sourceState) {\n            return null\n        }\n\n        const targetState = sourceState[linkName]\n\n        if (typeof targetState == 'undefined') {\n            return null\n        }\n\n        return this.changeState(targetState, data)\n    }\n\n    beforeEnter(state: TemplateState, callback: TransitionCallback) {\n        return this.transitionListeners[state].addListener(EventType.BEFORE_ENTER, callback)\n    }\n\n    afterEnter(state: TemplateState, callback: TransitionCallback) {\n        return this.transitionListeners[state].addListener(EventType.AFTER_ENTER, callback)\n    }\n\n    beforeLeave(state: TemplateState, callback: TransitionCallback) {\n        return this.transitionListeners[state].addListener(EventType.BEFORE_LEAVE, callback)\n    }\n\n    afterLeave(state: TemplateState, callback: TransitionCallback) {\n        return this.transitionListeners[state].addListener(EventType.AFTER_LEAVE, callback)\n    }\n\n    onData(state: TemplateState, callback: DataCallback) {\n        return this.dataListeners[state].addListener('data', callback)\n    }\n\n    /**\n     * Changes the state machine into the new state, then sends the data\n     * ignoring the result. This is so on `onData` calls we can just\n     * short-circuit the execution using: `return stateMachine.forwardData(..)`\n     * \n     * @param newState The state to transition into.\n     * @param data The data to send.\n     */\n    forwardData(newState: TemplateState, data: any) : TemplateState {\n        this.sendData(newState, data)\n        return null\n    }\n\n    /**\n     * Sends the data into the state machine, to be processed by listeners\n     * registered with `onData`.\n     * @param data The data to send.\n     */\n    sendData(data: any) : TemplateState;\n    /**\n     * Transitions first the state machine into the new state, then it\n     * will send the data into the state machine.\n     * @param newState \n     * @param data \n     */\n    sendData(newState: TemplateState, data: any) : TemplateState;\n    sendData(newState: any, data?: any) {\n        this.ensureStateMachineInitialized()\n\n        if (typeof data == 'undefined') {\n            data = newState\n            newState = undefined\n        }\n\n        if (typeof newState != 'undefined') {\n            this.changeState(newState, data)\n        }\n\n        const targetState = this.dataListeners[this.currentState].fire('data', data)\n\n        if (targetState != null) {\n            return this.changeState(targetState, data)\n        }\n\n        return this.currentState\n    }\n}\n\nfunction registerTransition(name: string, fromState: TemplateState, toState: TemplateState) : void {\n    transitionSet[fromState << 16 | toState] = true\n    \n    if (!name) {\n        return\n    }\n\n    let fromMap = linkMap[fromState]\n    if (!fromMap) {\n        fromMap = linkMap[fromState] = {}\n    }\n\n    fromMap[name] = toState\n}\n\nconst EventType = {\n    BEFORE_ENTER : 'before-enter',\n    BEFORE_LEAVE : 'before-leave',\n    AFTER_LEAVE : 'after-leave',\n    AFTER_ENTER : 'after-enter',\n}\n\nclass EventListener<T extends Function> {\n    registered : { [eventName: string] : Set<T> } = {}\n\n    addListener(eventName: string, callback: T) : CallbackRegistration {\n        let eventListeners = this.registered[eventName]\n        \n        if (!eventListeners) {\n            eventListeners = this.registered[eventName] = new Set();\n        }\n\n        eventListeners.add(callback)\n\n        return {\n            detach() {\n                eventListeners.delete(callback)\n            }\n        }\n    }\n\n    fire(eventName: string, ev: any) : any {\n        if (!this.registered[eventName]) {\n            return\n        }\n\n        let result\n\n        this.registered[eventName].forEach(it => {\n            try {\n                const potentialResult = it.call(null, ev)\n                if (typeof potentialResult !== 'undefined' && typeof result != 'undefined') {\n                    throw new TemplateStateError(`Data is already returned.`)\n                }\n\n                result = potentialResult\n            } catch (e) {\n                if (e instanceof TemplateStateError) {\n                    throw e\n                }\n            }\n        })\n\n        return result\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/TemplateStateMachine.ts"],"sourceRoot":""}