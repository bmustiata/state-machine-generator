{"version":3,"sources":["webpack:///webpack/bootstrap 27e18f9b0677780121af","webpack:///external \"babel-polyfill\"","webpack:///./src/main.ts","webpack:///external \"colors\"","webpack:///external \"path\"","webpack:///external \"mkdirp\"","webpack:///external \"klaw-sync\"","webpack:///./src/Model.ts","webpack:///external \"fs\"","webpack:///external \"js-yaml\"","webpack:///./src/Template.ts"],"names":[],"mappings":"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","file":"out/main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 27e18f9b0677780121af","module.exports = require(\"babel-polyfill\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-polyfill\"\n// module id = 1\n// module chunks = 0","import { red, yellow } from 'colors'\nimport * as path from 'path'\nimport * as fs from 'fs'\nimport * as mkdirp from 'mkdirp'\nimport klawSync = require('klaw-sync')\n\nimport { StateModel, readStateModel } from './Model'\nimport { isSimpleTemplate, applyTemplate, createPackageFolder } from './Template'\n\nconst templateName = process.argv[2]\nconst fileName = process.argv[3]\n\nif (!fileName || !templateName) {\n    console.error(red('You need to pass in a template and a model to process. (yml file)'))\n    console.error(yellow('state-machine-generator TEMPLATE_NAME YML_FILE'))\n    process.exit(1)\n}\n\nconst model = readStateModel(fileName)\n\nlet templateFolder\n\nif (isSimpleTemplate(templateName)) {\n    console.log(`__dirname is ${__dirname}`)\n    templateFolder = path.resolve(path.join(\n        __dirname, '../src/templates/', templateName,'/'))\n} else {\n    templateFolder = templateName\n}\n\nconst targetFolder = path.join('.', createPackageFolder(model.package))\n\nklawSync(templateFolder, { nofile: true })\n    .map(file => file.path.substring(templateFolder.length + 1))\n    .forEach(folderPath => {\n        folderPath = folderPath.replace(/Xyz/g, model.name)\n        mkdirp.sync(path.join(targetFolder, folderPath))\n    })\n\n\nklawSync(templateFolder, { nodir: true })\n    .map(file => file.path.substring(templateFolder.length + 1))\n    .forEach(filePath => {\n        applyTemplate(\n            path.join(templateFolder, filePath),\n            targetFolder,\n            filePath,\n            model\n        );\n    })\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","module.exports = require(\"colors\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"colors\"\n// module id = 3\n// module chunks = 0","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 4\n// module chunks = 0","module.exports = require(\"mkdirp\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mkdirp\"\n// module id = 5\n// module chunks = 0","module.exports = require(\"klaw-sync\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"klaw-sync\"\n// module id = 6\n// module chunks = 0","import * as fs from 'fs'\nimport * as jsYaml from 'js-yaml'\n\ntype State = string;\n\nexport interface Transition {\n    name: string\n    startState: State\n    endState: State\n}\n\nexport interface StateModel {\n  name: string\n  package: string\n  states: Array<State>\n  transitions: Array<Transition>\n}\n\n/**\n * Read the state model from the yml file.\n * @param fileName the file to read\n */\nexport function readStateModel(fileName: string) : StateModel {\n  const result = {\n    name: 'Test',\n    package: 'com.ciplogic.test',\n    states: [],\n    transitions: []\n  }\n\n  const content = fs.readFileSync(fileName, 'utf-8')\n  const fileItems = jsYaml.load(content)\n\n  if (!fileItems.name) {\n    throw new Error('`name` property was not specified in the yml file.');\n  }\n  result.name = fileItems.name;\n\n  if (!fileItems.package) {\n    throw new Error('`package` property was not specified in the yml file.');\n  }\n  result.package = fileItems.package;\n\n  if (!fileItems.states) {\n    throw new Error('`states` property was not specified in the yml file.');\n  }\n  result.states = fileItems.states;\n\n  console.log(`file transitions ${JSON.stringify(fileItems.transitions)}`);\n\n  function addTransition(startStateName, transitionName) {\n    const startState = result.states[ result.states.indexOf(startStateName) ]\n    const endStateName = fileItems.transitions[startStateName][transitionName];\n    const endState = result.states[ result.states.indexOf(endStateName) ];\n\n    console.log(`${startStateName} -> ${endStateName} (${transitionName})`);\n\n    const transition : Transition = {\n      name: transitionName,      \n      startState,\n      endState,\n    }\n\n    result.transitions.push(transition)\n  }\n\n  if (!fileItems.transitions) {\n    throw new Error('`transitions` property was not specified in the yml file.');\n  }\n\n  Object.keys(fileItems.transitions).forEach((startStateName) => {\n    Object.keys(fileItems.transitions[startStateName]).forEach((transitionName) => {\n      addTransition(startStateName, transitionName);\n    })\n  })\n\n  console.log(`Item: ${JSON.stringify(result)}`)\n\n  return result;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Model.ts","module.exports = require(\"fs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fs\"\n// module id = 8\n// module chunks = 0","module.exports = require(\"js-yaml\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"js-yaml\"\n// module id = 9\n// module chunks = 0","import * as mkdirp from 'mkdirp'\nimport * as path from 'path'\nimport * as fs from 'fs'\n\n\nimport { StateModel } from './Model'\n\nconst TRANSITIONS_RE = /^\\s*\\/\\/ BEGIN_TRANSITIONS:\\s*(.*)\\s*$/m\nconst TRANSITIONS_END_RE = /^\\s*\\/\\/ END_TRANSITIONS\\s*$/m\n\nconst TRANSITION_SET_RE = /^\\s*\\/\\/ BEGIN_TRANSITION_SET:\\s*(.*)\\s*$/m\nconst TRANSITION_SET_END_RE = /^\\s*\\/\\/ END_TRANSITION_SET\\s*$/m\n\nconst STATES_RE = /^\\s*\\/\\/ BEGIN_STATES:\\s*(.*)\\s*$/m\nconst STATES_END_RE = /^\\s*\\/\\/ END_STATES\\s*$/m\n\n/**\n * \n * @param packageName The folder sub structure to create.\n */\nexport function createPackageFolder(packageName: string) : string {\n    console.log(`package: ${packageName}`)\n    const folder = packageName.replace(/\\./g, '/')\n    mkdirp.sync(folder)\n\n    return folder\n}\n\nexport function isSimpleTemplate(name: string) {\n    return 'java' == name;\n}\n\nfunction replacePackageAndName(line: string, model: StateModel) : string {\n    line = line.replace(/Xyz/g, model.name)\n    line = line.replace(/com\\.ciplogic\\.statemachine/g, model.package)\n\n    return line\n}\n\nlet transitionsReading = false\nlet transitionSetReading = false\nlet stateReading = false\n\n/**\n * Write the template file.\n * @param templateFilePath The source template.\n * @param targetFilePath The target file to write.\n * @param filePath Internal path inside the template folder.\n * @param model\n */\nexport function applyTemplate(templateFilePath: string, \n                              targetFolder: string,\n                              filePath: string, \n                              model: StateModel) {\n    filePath = filePath.replace(/Xyz/g, model.name)\n    \n    const targetFilePath = path.join(targetFolder, filePath);\n\n    let resultContent = []\n\n    console.log(`Reading ${templateFilePath}`)\n\n    const content = fs.readFileSync(templateFilePath, 'utf-8')\n                      .split(/\\r?\\n/g)\n\n    console.log('Readed content: ', content)\n\n    content.forEach(line => {\n                if (transitionsReading) {\n                    if (TRANSITIONS_END_RE.test(line)) {\n                        transitionsReading = false;\n                    }\n\n                    return; // ignore line\n                }\n\n                if (transitionSetReading) {\n                    if (TRANSITION_SET_END_RE.test(line)) {\n                        transitionSetReading = false\n                    }\n\n                    return; // ignore the line\n                }\n\n                if (stateReading) {\n                    if (STATES_END_RE.test(line)) {\n                        stateReading = false\n                    }\n\n                    return; // also ingore line\n                }\n\n                const transitionMatch = TRANSITIONS_RE.exec(line)\n                if (transitionMatch) {\n                    const pattern = transitionMatch[1]\n                    model.transitions.forEach(transition => {\n                        const transitionString = pattern\n                            .replace(/TRANSITION_NAME/g, transition.name)\n                            .replace(/FROM_STATE/g, transition.startState)\n                            .replace(/TO_STATE/g, transition.endState)\n                        \n                        resultContent.push(replacePackageAndName(transitionString, model))\n                    })\n\n                    transitionsReading = true\n\n                    return\n                }\n\n                const transitionSetMatch = TRANSITION_SET_RE.exec(line)\n                if (transitionSetMatch) {\n                    const pattern = transitionSetMatch[1]\n                    const transitionSet = new Set(model.transitions.map(it => it.name))\n                    transitionSet.forEach(transitionName => {\n                        const transitionString = pattern\n                            .replace(/TRANSITION_NAME/g, transitionName)\n                        \n                        resultContent.push(replacePackageAndName(transitionString, model))\n                    })\n\n                    transitionSetReading = true\n\n                    return\n                }\n\n                const stateMatch = STATES_RE.exec(line)\n                if (stateMatch) {\n                    const pattern = stateMatch[1]\n                    model.states.forEach(state => {\n                        const stateString = pattern\n                            .replace('STATE_NAME', state)\n                        \n                        resultContent.push(replacePackageAndName(stateString, model))\n                    })\n\n                    stateReading = true\n\n                    return\n                }\n\n\n                resultContent.push(replacePackageAndName(line, model))\n            })\n\n    let fileContent = resultContent.join('\\n')\n\n    fs.writeFileSync(targetFilePath, fileContent, {encoding: 'utf-8'})\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Template.ts"],"sourceRoot":""}